class Solution {
public:
    int numMatchingSubseq(string s, vector<string>& words) {
        unordered_map<char,vector<int>>m;

        int i=0;
        for(auto it:s)m[it].push_back(i++);
        
        int count =0;
        for(int j=0;j<words.size();j++){
            string curr = words[j];
            
            int latest =-1;
            for(int i=0;i<curr.size();i++){
                auto it = upper_bound(m[curr[i]].begin(),m[curr[i]].end(),latest);
                if(it==m[curr[i]].end())break;
                latest = *it;
                if(i==curr.size()-1)count++;
            }
        }return count;
    }
};